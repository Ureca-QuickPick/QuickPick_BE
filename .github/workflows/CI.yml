name: CI FOR MVP

on:
  push:
#    branches-ignore:
#      - main
#      - develop

jobs:
  CI:
    name: Continuous Integration
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: 'testDB'
          mysql user: 'test'
          mysql password: 'testPW'

      - name: Start Redis
        uses: supercharge/redis-github-action@1.6.0

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5

      - name: Get short SHA
        id: slug
        run: echo "sha7=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Create application.properties
        run: |
          cat <<EOT > ./src/main/resources/application.properties
          spring.application.name=ureca

          spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
          spring.datasource.url=jdbc:mysql://localhost:3306/testDB?characterEncoding=UTF-8&serverTimezone=Asia/Seoul
          spring.datasource.username=test
          spring.datasource.password=testPW

          # spring jpa
          spring.jpa.database=mysql
          spring.jpa.properties.hibernate.show_sql=true
          spring.jpa.hibernate.ddl-auto=create-drop
          spring.jpa.properties.hibernate.format_sql=true


          jwt.issuer=${{ secrets.JWT_ISSUER }}
          jwt.secret_key=${{ secrets.JWT_SECRET_KEY }}
          
          # OAuth
          spring.security.oauth2.client.registration.google.client-id=${{ secrets.GOOGLE_CLIENT_ID }}
          spring.security.oauth2.client.registration.google.client-secret=${{ secrets.GOOGLE_CLIENT_SECRET }}
          spring.security.oauth2.client.registration.google.scope=email,profile
          
          spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
          spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
          spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
          
          #Redis
          spring.data.redis.host=localhost
  
          spring.data.redis.port=6379
          
          spring.data.redis.lettuce.pool.max-active=10
          spring.data.redis.lettuce.pool.max-idle=10
          spring.data.redis.lettuce.pool.min-idle=1
          spring.data.redis.lettuce.pool.max-wait=1000ms
          EOT
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew build
